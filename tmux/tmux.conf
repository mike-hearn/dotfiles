# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235
set-option -g status-fg default
set-option -g status-attr default

# set new windows & splits
bind-key c new-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
bind-key b split-window -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'

# default window title colors
set-window-option -g window-status-fg default
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g clock-mode-colour default

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 40
set -g status-right-length 140
set -g status-left '[#S] #[fg=colour5]#H'
set -g status-right '#[fg=colour2,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=colour3,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=colour4]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on
setw -g window-status-activity-bg red
setw -g window-status-activity-fg colour0

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# C-hjkl pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Bind , to window rename
bind-key -T prefix ',' command-prompt -p "rename window:" "rename-window '%%'"
bind-key -T prefix '$' command-prompt -p "rename session:" "rename-session '%%'"

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
setw -g automatic-rename on

# color
set -g default-terminal "screen-256color"

# Cycle through layouts
bind-key -r Space next-layout

# Swap pane (adding repetition with -r)
bind-key -r { swap-pane -U
bind-key -r } swap-pane -D

# Pane management
bind-key C-j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key C-t command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Mouse support?
set-option -g -q mouse on

# Renumber windows automatically
set-option -g renumber-windows on

# Kill panes & windows
bind-key -T prefix x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key -T prefix X confirm-before -p "kill-window (y/n)" kill-window

# Session handling
bind-key -T prefix S new-session
bind-key -T prefix 0 switch-client -l
bind-key -T prefix s run-shell "tmux list-sessions -F \"##{session_id} ##{session_name}\" | sort -r | fzf-tmux | cut -d' ' -f 2 | xargs tmux switch-client -t"

# Swap window overwrite
bind-key -T prefix . command-prompt "swap-window -t '%%'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugin settings
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
