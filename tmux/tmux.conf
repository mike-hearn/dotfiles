# {{{ Colors / Status Bar

    # 256-color shell for tmux, for use with Base16 & anything else truecolor
    # https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
    set-option -ga terminal-overrides ",*256col*:Tc"

    set-option -g status-bg colour18  # Slight color-shift from default bgcolor
    set-option -g status-fg colour21
    set-option -g status-attr default

    set -g status-left '#[fg=colour21][#S] #[fg=colour20]#H'
    set -g status-right '#[fg=cyan]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -g 0 --interval 2)#[default] #[fg=colour3,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=colour4]%Y-%m-%d'

    set -g status-interval 1
    set -g status-justify centre # center align window list
    set -g status-left-length 40
    set -g status-right-length 140

# }}}
# {{{ Settings

    # Default window title colors
    set-window-option -g window-status-fg default
    set-window-option -g window-status-bg default
    set-window-option -g window-status-attr default
    set-window-option -g clock-mode-colour default

    # Start numbering at 1
    set -g base-index 1

    # Allows for faster key repetition
    set -s escape-time 0

    # Rather than constraining window size to the maximum size of any client
    # connected to the *session*, constrain window size to the maximum size of any
    # client connected to *that window*. Much more reasonable.
    setw -g aggressive-resize off

    # Allows us to use C-a a <command> to send commands to a TMUX session inside
    # another TMUX session
    bind-key a send-prefix

    # Activity monitoring
    setw -g monitor-activity off
    set -g visual-activity off
    set-option -g bell-action none

    # Vi copypaste mode
    set-window-option -g mode-keys vi
    bind-key -T copy-mode-vi 'v' send -X begin-selection
    bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

    # Automatically rename windows as running/active process
    setw -g automatic-rename on

    # Mouse support
    set-option -g -q mouse on

    # Renumber windows automatically (i.e. don't skip numbers if a win is closed)
    set-option -g renumber-windows on

    # Set focus events on
    set -g focus-events on

# }}}
# {{{ Key Bindings

    set-option -g prefix C-a  # C-b is not acceptable -- Vim uses it

    bind-key C-a last-window  # prefix-a goes to last window

    # set new windows & splits
    bind-key c new-window -c '#{pane_current_path}'
    bind-key v split-window -h -c '#{pane_current_path}'
    bind-key % split-window -h -c '#{pane_current_path}'
    bind-key b split-window -c '#{pane_current_path}'

    # C-hjkl pane traversal
    bind h select-pane -L
    bind C-h select-pane -L
    bind j select-pane -D
    bind C-j select-pane -D
    bind k select-pane -U
    bind C-k select-pane -U
    bind l select-pane -R
    bind C-l select-pane -R

    # Shift+HJKL pane resizing
    bind-key -r H resize-pane -L 5
    bind-key -r J resize-pane -D 5
    bind-key -r K resize-pane -U 5
    bind-key -r L resize-pane -R 5

    # Bind , to window rename
    bind-key -T prefix ',' command-prompt -p "rename window:" "rename-window '%%'"
    bind-key -T prefix '$' command-prompt -p "rename session:" "rename-session '%%'"

    # Create new window with specific name with prefix+C
    bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

    # Reload config with prefix+r
    bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

    # Cycle through layouts
    bind-key -r Space next-layout

    # Swap pane (adding repetition with -r)
    bind-key -r { swap-pane -U
    bind-key -r } swap-pane -D

    # Pane management
    bind-key C-j command-prompt -p "join pane from:"  "join-pane -s '%%'"
    bind-key C-t command-prompt -p "send pane to:"  "join-pane -t '%%'"

    # Kill panes & windows
    bind-key -T prefix x confirm-before -p "kill-pane #P? (y/n)" kill-pane
    bind-key -T prefix X confirm-before -p "kill-window (y/n)" kill-window

    # Session handling
    bind-key -T prefix S new-session
    bind-key -T prefix space switch-client -l
    bind-key -T prefix s run-shell "tmux list-sessions -F \"##{session_name}\" | sort -rf | fzf-tmux | tr -d '\n' | xargs -0 tmux switch-client -t || true"

    # Swap window overwrite
    bind-key -T prefix . command-prompt "swap-window -t '%%'"

# }}}
# {{{ Plugins

    # List of plugins
    set -g @plugin 'tmux-plugins/tmux-sensible'
    set -g @plugin 'tmux-plugins/tmux-yank'
    set -g @plugin 'thewtex/tmux-mem-cpu-load'
    set -g @plugin 'christoomey/vim-tmux-navigator'

    # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    run '~/.tmux/plugins/tpm/tpm'

# }}}

# vim: foldmethod=marker: foldlevel=0
