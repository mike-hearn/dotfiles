set autochdir                   " Autoset working dir to current file's dir
set autoread                    " Check if buffer was modified
set background=dark
set backup
set backupdir=~/.vim/tmp/backup/
set colorcolumn=80
set directory=~/.vim/tmp/swap/
set expandtab                   " Convert tabs to spaces
set fo-=t                       " Don't automatically wrap text when typing
set guifont=InputMonoNerdFont-Regular:h14
set guioptions-=L
set hidden
set hlsearch                    " Highlights search terms
set ignorecase                  " Ignore case when searching
set incsearch                   " Starts searching when you type the first char
set lazyredraw                  " Redraw only when we need to.
set matchtime=3
set modelines=1                 " Modelines (last line of this file) work
set mouse=a                     " Mouse support in iTerm et al
set nocompatible
set nostartofline               " Cursor maintains position when switching buffers
set noswapfile
set nowrap                      " Don't automatically wrap on load
set relativenumber number       " Show line numbers
set shiftround
set shiftwidth=4                " Amount of whitespace to insert
set showmatch                   " Highlight matching [{()}]
set smartcase                   " Ignore case if search pattern is lowercase
set smartindent
set softtabstop=4               " Fine-tunes amount of insert whitespace
set spellsuggest=best,10        " Spelling
set t_Co=256
set tabstop=4                   " Specifies width of tab character
set tw=79                       " Width of document (used by gd)
set undodir=~/.vim/tmp/undo/
set undofile                    " Undo history maintained across sessions
set undolevels=1000
set undoreload=10000

au FocusGained * checktime
au InsertLeave * match ExtraWhitespace /\s\+$/
highlight ExtraWhitespace ctermbg=red guibg=red

if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    silent !mkdir -p ~/.vim/tmp/backup
    silent !mkdir -p ~/.vim/tmp/swap
    silent !mkdir -p ~/.vim/tmp/undo
    autocmd VimEnter * PlugInstall
endif
call plug#begin()

Plug 'chriskempson/base16-vim'
Plug 'Chiel92/vim-autoformat'                                                   " Integrate yapf & other autoformatters
Plug 'Lokaltog/vim-easymotion'                                                  " Quickly navigate through text
Plug 'airblade/vim-gitgutter'                                                   " Show git updates/deletes/changes in gutter
Plug 'airblade/vim-rooter'                                                      " Sets the pwd to git root (and makes me hit enter a lot)
Plug 'christoomey/vim-tmux-navigator'                                           " Vim splits act like tmux pane
Plug 'editorconfig/editorconfig-vim'                                            " Integrates editorconfig standard
Plug 'ervandew/supertab'                                                        " Tab completion super-fied
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  }
Plug 'junegunn/fzf.vim'
Plug 'mattn/emmet-vim'
Plug 'mike-hearn/vim-buffer-history' " Keeps track of buffer history
Plug 'nathanaelkane/vim-indent-guides' " Show indent guides
Plug 'scrooloose/nerdtree'
Plug 'sheerun/vim-polyglot' " 100+ language syntaxes
Plug 'sjl/gundo.vim', { 'on': 'GundoToggle' }
Plug 'teranex/jk-jumps.vim' " Adds a 'jump' when using, eg, 10j to move
Plug 'terryma/vim-multiple-cursors'
Plug 'tmux-plugins/vim-tmux-focus-events' " For auto-reloading on focus
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-obsession' " Remember vim session state
Plug 'tpope/vim-surround' " Easy surrounding bracket or tag changing
Plug 'tpope/vim-unimpaired'
Plug 'vim-scripts/BufOnly.vim' " Close all buffers except open
Plug 'w0rp/ale'
Plug 'ludovicchabant/vim-gutentags'

call plug#end()

" Mappings
let g:mapleader = ","

" Easy escaping
inoremap jj <ESC>
inoremap kj <ESC>
inoremap jk <ESC>

" Sensible traversal using j/k
nnoremap j gj
nnoremap k gk

" Easier jumping to beginning & end
noremap H ^
noremap L g_

" Quick delete entire line
nnoremap D 0C<Esc>

" Global copy/paste
vmap <leader>y :w! /tmp/vitmp<CR>
nmap <leader>p :r! cat /tmp/vitmp<CR>

" Buffer management; for additiona mappings
noremap <Leader>a <C-^>
noremap <C-Tab> <C-^>
nnoremap <Leader>n :bp<CR>
nnoremap <Leader>m :bn<CR>
nnoremap <Leader>x :b #<CR>:bd #<CR>
nnoremap <Leader>q <C-w>q
nnoremap <Leader>r :on<CR>
nnoremap <Leader>X :BufOnly<CR>

" Home key buffer navigation
nnoremap <Leader>ja :BufferHistoryJumpTo 0<CR>
nnoremap <Leader>js :BufferHistoryJumpTo 1<CR>
nnoremap <Leader>jd :BufferHistoryJumpTo 2<CR>
nnoremap <Leader>jf :BufferHistoryJumpTo 3<CR>
nnoremap <Leader>jg :BufferHistoryJumpTo 4<CR>
nnoremap <Leader>jh :BufferHistoryJumpTo 5<CR>

" Tab using leader + N/M
nnoremap <Leader>N :tabprevious<CR>
nnoremap <Leader>M :tabnext<CR>

" Easier formatting of paragraphs
vnoremap Q gq
nnoremap Q gqap

" Code folding
nnoremap <space> za
vnoremap <space> zf

" Window switching
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Toggle NERDTree
map <D-\> :NERDTreeToggle<CR>
map <C-\> :NERDTreeToggle<CR>
nnoremap <Leader>F :NERDTreeFind<CR>

" Center paragraph jumps
nmap { {zz
nmap } }zz

" Move lines up/down with ease (alt + j/k)
nnoremap ∆ :m .+1<CR>==
nnoremap ˚ :m .-2<CR>==

" Save, and exit insert-mode afterward
inoremap <D-s> <Esc>:w<CR>
nnoremap <D-s> :w<CR>
vnoremap <D-s> :w<CR>

" Super undo with Gundo.vim
nnoremap <leader>u :GundoToggle<CR>

" Vertically split the current & alternative buffer
nnoremap <leader>v :b #<CR>:vsp #<CR>

" Toggle between standard and relative line numbers
nnoremap <C-n> :set relativenumber!

" Map <Leader>w to save, because I already do it accidentally
nnoremap <leader>w :w<CR>
inoremap <leader>w <Esc>:w<CR>
nnoremap <leader>W :wa<CR>
inoremap <leader>W <Esc>:wa<CR>

" CtrlP
nnoremap <Leader>s :Buffers<CR>
nnoremap <Leader>f :History<CR>
map <C-p> :Files<CR>

" FZF
let g:fzf_files_options =
            \ '--preview "(highlight -O ansi {} || cat {}) 2> /dev/null | head -'.&lines.'"'
autocmd VimEnter * command! -bang -nargs=* Ag
            \ call fzf#vim#ag(<q-args>,
            \                 <bang>0 ? fzf#vim#with_preview('up:60%')
            \                         : fzf#vim#with_preview('right:50%:hidden', '?'),
            \                 <bang>0)

" NERDTree
let NERDTreeIgnore = ['node_modules']

" jedi-vim
map <Leader>b oimport ipdb<CR>ipdb.set_trace()  # BREAKPOINT<C-c>
map <Leader>B Oimport ipdb<CR>ipdb.set_trace()  # BREAKPOINT<C-c>

" Easymotion
map s <Plug>(easymotion-s)

" Gutentags
let g:gutentags_cache_dir = '.git'

" vim-gitgutter
let g:gitgutter_max_signs = 1500

" vim-rooter
let g:rooter_silent_chdir = 1

" vim-tmux-navigator
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>

let base16colorspace=256
colorscheme base16-oceanicnext

" vim: foldmethod=marker: foldlevel=0
